<?php

namespace Incept\Framework\Package\Event;

use StdClass;
use PHPUnit\Framework\TestCase;

use Incept\Framework\Framework;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-07-27 at 13:49:45.
 */
class EventPackageTest extends TestCase
{
  /**
   * @var EventPackage
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp(): void
  {
    $handler = new Framework;
    $this->object = new EventPackage($handler);
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown(): void
  {
  }

  /**
   * @covers Incept\Framework\Package\Event\EventPackage::call
   */
  public function testCall()
  {
    $trigger = new StdClass();
    $trigger->success = false;
    $trigger->stage = [];
    $this->object->on('call-test', function($req, $res) use ($trigger) {
      $trigger->success = true;
      $trigger->stage = $req->getStage();

      if ($req->hasStage('fail')) {
        return $res->setError(true, 'Failed');
      }

      $res->setResults('works');
    });

    $this->object->on('call-test-2', function($req, $res) use ($trigger) {
      $trigger->success = true;
    });

    $results = $this->object->call('call-test');

    $this->assertTrue($trigger->success);
    $this->assertTrue(empty($trigger->stage));
    $this->assertEquals('works', $results);

    $trigger->success = false;
    $trigger->stage = [];
    $results = $this->object->call('call-test', ['foo' => 'bar']);

    $this->assertTrue($trigger->success);
    $this->assertEquals('bar', $trigger->stage['foo']);
    $this->assertEquals('works', $results);

    $trigger->success = false;
    $trigger->stage = [];
    $results = $this->object->call('call-test', ['fail' => true]);

    $this->assertTrue($trigger->success);
    $this->assertFalse($results);

    $trigger->success = false;
    $results = $this->object->call('call-test-2', null);

    $this->assertTrue($trigger->success);
  }

  /**
   * @covers Incept\Framework\Package\Event\EventPackage::on
   */
  public function testOn()
  {
    $actual = new StdClass();
    $actual->count = 0;
    $this->object->on('foobar', function() use ($actual) {
      $actual->count++;
    }, 'barfoo', function() use ($actual) {
      $actual->count++;
    });

    $this->object->on('barfoo', function() use ($actual) {
      $actual->count++;
    }, 1);

    $this->object->emit('foobar');
    $this->assertEquals(3, $actual->count);
  }
}
