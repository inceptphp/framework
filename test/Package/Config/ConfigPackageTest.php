<?php

namespace Incept\Framework\Package\Config;

use StdClass;
use PHPUnit\Framework\TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-07-27 at 13:49:45.
 */
class ConfigPackageTest extends TestCase
{
  /**
   * @var ConfigPackage
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp(): void
  {
    $this->object = new ConfigPackage;
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown(): void
  {
  }

  /**
   * @covers Incept\Framework\Package\Config\ConfigPackage::set
   * @covers Incept\Framework\Package\Config\ConfigPackage::get
   * @covers Incept\Framework\Package\Config\ConfigPackage::exists
   */
  public function testSet()
  {
    try {
      $this->object->exists('foo');
    } catch(ConfigException $e) {
      $message = $e->getMessage();
    }

    $this->assertEquals('Folder not set. Try $config->setFolder(string).', $message);

    try {
      $this->object->get('foo');
    } catch(ConfigException $e) {
      $message = $e->getMessage();
    }

    $this->assertEquals('Folder not set. Try $config->setFolder(string).', $message);

    try {
      $this->object->set('foo');
    } catch(ConfigException $e) {
      $message = $e->getMessage();
    }

    $this->assertEquals('Folder not set. Try $config->setFolder(string).', $message);

    $this->object->setFolder(dirname(dirname(__DIR__)) . '/assets/config');

    $this->assertEquals('zoo', $this->object->get('foo/bar/zoo', 'foo', 'bar'));

    $this->object->set('foo/bar/zoo')->set('foo/bar/zoo', [
      'foo' => [
        'bar' => 'zoo',
        'zoo' => 'foo'
      ]
    ]);

    $this->assertTrue(file_exists(dirname(dirname(__DIR__)) . '/assets/config/foo/bar/zoo.php'));
    $this->assertEquals('zoo', $this->object->get('foo/bar/zoo')['foo']['bar']);
    $this->assertEquals('zoo', $this->object->get('foo/bar/zoo', 'foo', 'bar'));

    $this->object->set('foo/bar/zoo', 'bar', [
      'foo' => [
        'bar' => 'zoo',
        'zoo' => 'foo'
      ]
    ]);

    $this->assertEquals('zoo', $this->object->get('foo/bar/zoo')['bar']['foo']['bar']);
    $this->assertEquals('zoo', $this->object->get('foo/bar/zoo', 'bar', 'foo', 'bar'));
    $this->assertTrue($this->object->exists('foo/bar/zoo', 'bar'));
  }

  /**
   * @covers Incept\Framework\Package\Config\ConfigPackage::setFolder
   * @covers Incept\Framework\Package\Config\ConfigPackage::getFolder
   */
  public function testSetFolder()
  {
    $folder = dirname(dirname(__DIR__)) . '/assets/config';

    $this->object->setFolder($folder);
    $this->assertEquals($folder, $this->object->getFolder());
    $this->assertEquals($folder . '/bar', $this->object->getFolder('bar'));

    try {
      $this->object->setFolder('foo');
    } catch(ConfigException $e) {
      $message = $e->getMessage();
    }

    $this->assertEquals('Folder foo was not found', $message);
  }
}
